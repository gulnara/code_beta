<div id="container" class="container">  
	<nav id="bt-menu" class="bt-menu">
		<a href="#" class="bt-menu-trigger"><span>Menu</span></a>
		<%= render "layouts/header" %>
	</nav>
	<div class="bb-custom-wrapper">
		<div id="bb-bookblock" class="bb-bookblock">
			<div class="bb-item" id="item1">
				<div class="content">
					<div class="scroller">
						<h1>Welcome to CodeBeta !</h1>
							<div class="analytics">

								<%languages = @solutions.map{|a| a.language}%>
									<%counts = Hash.new(0)%>
									<%languages.each { |name| counts[name] += 1 }%>
              <% @d_3 = []%>
              <% counts.each do |key, value| %>
                <% @d_3 << {"label" =>  key + " "+value.to_s, "value"=> value.to_s}%>
              <%end %> 
              <%@j_data = @d_3%>
								 

								 	 <svg id="test1" class="mypiechart"></svg>
              <svg id="test2" class="mypiechart"></svg>
              <svg id="test3" class="mypiechart"></svg>
							</div>

    			</div>
				</div>
			</div>
		</div>
	</div>  
</div>
<script>

              //Regular pie chart example
nv.addGraph(function() {
    var width = 300,
        height = 300;

    var chart = nv.models.pieChart()
        .x(function(d) { return d.label })
        .y(function(d) { return d.value })
        .color(['#BDF271', '#29D9C2'])
        .showLabels(false)
        .width(width)
        .height(height);

      d3.select("#test1")
          .datum(data1)
        .transition().duration(1200)
          .attr('width', width)
          .attr('height', height)
          .call(chart);

    chart.dispatch.on('stateChange', function(e) { nv.log('New State:', JSON.stringify(e)); });

    return chart;
});
nv.addGraph(function() {
    var width = 300,
        height = 300;

    var chart = nv.models.pieChart()
        .x(function(d) { return d.label })
        .y(function(d) { return d.value })
        .showLabels(false)
        .color(['#6395FF', '#29D9C2'])
        .width(width)
        .height(height);

      d3.select("#test2")
          .datum(data2)
        .transition().duration(1200)
          .attr('width', width)
          .attr('height', height)
          .call(chart);

    chart.dispatch.on('stateChange', function(e) { nv.log('New State:', JSON.stringify(e)); });

    return chart;
});
nv.addGraph(function() {
    var width = 300,
        height = 300;

    var chart = nv.models.pieChart()
        .x(function(d) { return d.label })
        .y(function(d) { return d.value })
        .showLabels(false)
        .color([ '#50FFC5','#ACFF5D', '#54CCE8', '#6395FF','#54E868', '#F2295F'])
        .width(width)
        .height(height);

      d3.select("#test3")
          .datum(some_data)
        .transition().duration(1200)
          .attr('width', width)
          .attr('height', height)
          .call(chart);

    chart.dispatch.on('stateChange', function(e) { nv.log('New State:', JSON.stringify(e)); });

    return chart;
});


<%all_p = @problems.select{|a| a.user_id!=nil} %>

var t_p_l = "Total Problems " + <%= @problems.count.to_json %>;
var t_y_p_l = "User Problems " + <%= all_p.count.to_json %>;
var t_s_l = "Total Problems " + <%=  @problems.count.to_json %>;
var t_y_s_l = "Total Solutions " + <%= @solutions.count.to_json %>;
var t_problem = <%= @problems.count.to_json %>;
var y_problem = <%= all_p.count.to_json %>;
var t_solution = <%= @problems.count.to_json %>;
var y_solution = <%= @solutions.count.to_json %>;


//Pie chart example data. Note how there is only a single array of key-value pairs.
 var data1 = [
      {
        "label": t_p_l,
        "value" : t_problem
      } ,
      {
        "label": t_y_p_l,
        "value" : y_problem
      } 
]

 var data2 = [
      {
        "label": t_s_l,
        "value" : t_solution
      } ,
      {
        "label": t_y_s_l,
        "value" : y_solution
      } 
]

var some_data = <%= raw @j_data.to_json.chomp('"').reverse.chomp('"').reverse %>;

</script>